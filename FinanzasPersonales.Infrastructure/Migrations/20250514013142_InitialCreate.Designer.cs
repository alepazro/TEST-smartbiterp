// <auto-generated />
using System;
using FinanzasPersonales.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinanzasPersonales.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250514013142_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinanzasPersonales.Core.Entities.Deposito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("FondoMonetarioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FondoMonetarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Depositos");
                });

            modelBuilder.Entity("FinanzasPersonales.Core.Entities.DetalleGasto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Monto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RegistroGastoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoGastoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegistroGastoId");

                    b.HasIndex("TipoGastoId");

                    b.ToTable("DetallesGastos");
                });

            modelBuilder.Entity("FinanzasPersonales.Core.Entities.FondoMonetario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FondosMonetarios");
                });

            modelBuilder.Entity("FinanzasPersonales.Core.Entities.Presupuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoGastoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoGastoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Presupuestos");
                });

            modelBuilder.Entity("FinanzasPersonales.Core.Entities.RegistroGasto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("FondoMonetarioId")
                        .HasColumnType("int");

                    b.Property<string>("NombreComercio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FondoMonetarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("RegistrosGastos");
                });

            modelBuilder.Entity("FinanzasPersonales.Core.Entities.TipoGasto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposGasto");
                });

            modelBuilder.Entity("FinanzasPersonales.Core.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("FinanzasPersonales.Core.Entities.Deposito", b =>
                {
                    b.HasOne("FinanzasPersonales.Core.Entities.FondoMonetario", "FondoMonetario")
                        .WithMany("Depositos")
                        .HasForeignKey("FondoMonetarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanzasPersonales.Core.Entities.Usuario", "Usuario")
                        .WithMany("Depositos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FondoMonetario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FinanzasPersonales.Core.Entities.DetalleGasto", b =>
                {
                    b.HasOne("FinanzasPersonales.Core.Entities.RegistroGasto", "RegistroGasto")
                        .WithMany("DetallesGasto")
                        .HasForeignKey("RegistroGastoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanzasPersonales.Core.Entities.TipoGasto", "TipoGasto")
                        .WithMany("DetallesGastos")
                        .HasForeignKey("TipoGastoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegistroGasto");

                    b.Navigation("TipoGasto");
                });

            modelBuilder.Entity("FinanzasPersonales.Core.Entities.Presupuesto", b =>
                {
                    b.HasOne("FinanzasPersonales.Core.Entities.TipoGasto", "TipoGasto")
                        .WithMany("Presupuestos")
                        .HasForeignKey("TipoGastoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanzasPersonales.Core.Entities.Usuario", "Usuario")
                        .WithMany("Presupuestos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoGasto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FinanzasPersonales.Core.Entities.RegistroGasto", b =>
                {
                    b.HasOne("FinanzasPersonales.Core.Entities.FondoMonetario", "FondoMonetario")
                        .WithMany("RegistrosGastos")
                        .HasForeignKey("FondoMonetarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanzasPersonales.Core.Entities.Usuario", "Usuario")
                        .WithMany("RegistrosGastos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FondoMonetario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FinanzasPersonales.Core.Entities.FondoMonetario", b =>
                {
                    b.Navigation("Depositos");

                    b.Navigation("RegistrosGastos");
                });

            modelBuilder.Entity("FinanzasPersonales.Core.Entities.RegistroGasto", b =>
                {
                    b.Navigation("DetallesGasto");
                });

            modelBuilder.Entity("FinanzasPersonales.Core.Entities.TipoGasto", b =>
                {
                    b.Navigation("DetallesGastos");

                    b.Navigation("Presupuestos");
                });

            modelBuilder.Entity("FinanzasPersonales.Core.Entities.Usuario", b =>
                {
                    b.Navigation("Depositos");

                    b.Navigation("Presupuestos");

                    b.Navigation("RegistrosGastos");
                });
#pragma warning restore 612, 618
        }
    }
}
